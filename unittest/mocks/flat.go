// Code generated by MockGen. DO NOT EDIT.
// Source: flat.go

// Package mock_unittest is a generated GoMock package.
package mock_unittest

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFlat is a mock of Flat interface.
type MockFlat struct {
	ctrl     *gomock.Controller
	recorder *MockFlatMockRecorder
}

// MockFlatMockRecorder is the mock recorder for MockFlat.
type MockFlatMockRecorder struct {
	mock *MockFlat
}

// NewMockFlat creates a new mock instance.
func NewMockFlat(ctrl *gomock.Controller) *MockFlat {
	mock := &MockFlat{ctrl: ctrl}
	mock.recorder = &MockFlatMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFlat) EXPECT() *MockFlatMockRecorder {
	return m.recorder
}

// Area mocks base method.
func (m *MockFlat) Area() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Area")
	ret0, _ := ret[0].(int)
	return ret0
}

// Area indicates an expected call of Area.
func (mr *MockFlatMockRecorder) Area() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Area", reflect.TypeOf((*MockFlat)(nil).Area))
}

// Around mocks base method.
func (m *MockFlat) Around() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Around")
	ret0, _ := ret[0].(int)
	return ret0
}

// Around indicates an expected call of Around.
func (mr *MockFlatMockRecorder) Around() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Around", reflect.TypeOf((*MockFlat)(nil).Around))
}
